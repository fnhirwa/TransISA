name: Run Exhaustive Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # Run on both Linux and macOS
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libgtest-dev ninja-build llvm-19 llvm-19-dev clang-19 lld-19 lldb-19
          echo "LLVM_DIR=/usr/lib/llvm-19/cmake" >> $GITHUB_ENV
          echo "CC=/usr/bin/clang-19" >> $GITHUB_ENV
          echo "CXX=/usr/bin/clang++-19" >> $GITHUB_ENV
          echo "PATH=/usr/lib/llvm-19/bin:$PATH" >> $GITHUB_ENV

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja llvm@19
          echo "LLVM_DIR=$(brew --prefix llvm@19)/lib/cmake/llvm" >> $GITHUB_ENV
          echo "CC=$(brew --prefix llvm@19)/bin/clang" >> $GITHUB_ENV
          echo "CXX=$(brew --prefix llvm@19)/bin/clang++" >> $GITHUB_ENV
          echo "PATH=$(brew --prefix llvm@19)/bin:$PATH" >> $GITHUB_ENV

      - name: Verify LLVM Installation
        run: |
          echo "Using Clang version:"
          clang --version
          echo "Using LLVM version:"
          llvm-config --version
          echo "LLVM CXX Flags:"
          llvm-config --cxxflags

      - name: Clean and Rebuild
        run: |
          rm -rf build  # Delete old build artifacts
          cmake -B build -S . -G Ninja -DCMAKE_OSX_ARCHITECTURES=arm64
          cmake --build build
  
      - name: Run Tests
        run: ./build/tests/test_lexer
  
